const express = require('express');
const bodyParser = require('body-parser');
const fetch = require('node-fetch');

const app = express();
app.use(bodyParser.json());

const PAGE_ACCESS_TOKEN = "EAAGNO4a7r2wBPIFIZBY2apgrqdke3lZADZBlTxLsbmK4kBcucy58C76wnL8pvcg6MkYKePXxj70lNhjYYSehAY2kGP9N7WwjjZCx89QFaqJUpkJcp97mibruBQULBXH4AZARZA2Um2ZByRhdlyY05RvGv5PCIr02iTDZCRp3JHLdHZC44mCm5TSSOF3XMJf2X8fVLowZDZD";
const VERIFY_TOKEN = "123456";

app.get('/webhook', (req, res) => {
  let mode = req.query['hub.mode'];
  let token = req.query['hub.verify_token'];
  let challenge = req.query['hub.challenge'];

  if (mode && token) {
    if (mode === 'subscribe' && token === VERIFY_TOKEN) {
      console.log('WEBHOOK_VERIFIED');
      res.status(200).send(challenge);
    } else {
      res.sendStatus(403);
    }
  }
});

app.post('/webhook', (req, res) => {
  let body = req.body;

  if (body.object === 'page') {
    body.entry.forEach(function(entry) {
      let webhook_event = entry.messaging[0];
      let sender_psid = webhook_event.sender.id;

      if (webhook_event.message && webhook_event.message.text) {
        let response = {
          "text": "à¦†à¦ªà¦¨à¦¾à¦° à¦®à§‡à¦¸à§‡à¦œ à¦ªà§‡à§Ÿà§‡ à¦­à¦¾à¦²à§‹ à¦²à¦¾à¦—à¦²à§‹! ðŸ˜Š"
        };
        callSendAPI(sender_psid, response);
      }
    });
    res.status(200).send('EVENT_RECEIVED');
  } else {
    res.sendStatus(404);
  }
});

function callSendAPI(sender_psid, response) {
  let request_body = {
    recipient: { id: sender_psid },
    message: response
  };

  fetch(`https://graph.facebook.com/v14.0/me/messages?access_token=${PAGE_ACCESS_TOKEN}`, {
    method: 'POST',
    headers: {'Content-Type': 'application/json'},
    body: JSON.stringify(request_body)
  })
  .then(res => {
    if(!res.ok) console.error('Unable to send message:', res.statusText);
  })
  .catch(err => console.error(err));
}

app.listen(process.env.PORT || 3000, () => {
  console.log('Server is running');
});
